name: Generate Unique ID for Issues

on:
  issues:
    types: [opened]

jobs:
  generate-unique-id:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Unique ID
        id: generate_id
        run: |
          # Generate a UUID (or use any other method to create a unique ID)
          UNIQUE_ID=$(uuidgen)
          echo "Unique ID: $UNIQUE_ID"
          echo "unique_id=$UNIQUE_ID" >> $GITHUB_OUTPUT

      - name: Add Unique ID to Project Field
        uses: actions/github-script@v6
        with:
          script: |
            // First, let's list all available projects
              const projectsQuery = `
                query($owner: String!) {
                  user(login: $owner) {
                    projectsV2(first: 20) {
                      nodes {
                        id
                        number
                        title
                      }
                    }
                  }
                }
              `;

              const projectsVariables = {
                owner: context.repo.owner
              };

              // Log available projects
              const projectsResult = await github.graphql(projectsQuery, projectsVariables);
              console.log('Available projects:', JSON.stringify(projectsResult, null, 2));
              
            // Using Projects API v2
            const projectId = 4; // Replace with your project ID
            const query = `
              query($owner: String!, $number: Int!) {
                user(login: $owner) {
                  projectV2(number: $number) {
                    id
                    fields(first: 20) {
                      nodes {
                        ... on ProjectV2Field {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            `;

            const variables = {
              owner: context.repo.owner,
              number: projectId
            };

            const result = await github.graphql(query, variables);
            const field = result.user.projectV2.fields.nodes.find(f => f.name === 'Unique ID');

            if (!field) {
              console.error('Custom field "Unique ID" not found.');
              return;
            }

            // Update the item with the unique ID
            await github.graphql(`
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: String!) {
                updateProjectV2ItemFieldValue(
                  input: {
                    projectId: $projectId
                    itemId: $itemId
                    fieldId: $fieldId
                    value: $value
                  }
                ) {
                  projectV2Item {
                    id
                  }
                }
              }
            `, {
              projectId: result.user.projectV2.id,
              itemId: context.payload.issue.node_id,
              fieldId: field.id,
              value: '${{ steps.generate_id.outputs.unique_id }}'
            });